name: '[DOMO] Deploy'

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Run Django Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Create GitHub Deployment
        id: deployment
        uses: bobheadxi/deployments@v1.4.0
        with:
          step: start
          token: ${{ github.token }}
          env: production
          ref: ${{ github.sha }}
            
      - name: executing remote ssh commands
        env:
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_SSH_KEY: ${{ secrets.REMOTE_SSH_KEY }}
          REMOTE_SSH_PORT: ${{ secrets.REMOTE_SSH_PORT }}
          CELERY_FULL_PATH: ${{ secrets.CELERY_FULL_PATH }}
        run: |
            echo "$REMOTE_SSH_KEY" > private_key
            chmod 600 private_key
            ssh -i private_key -o StrictHostKeyChecking=no -p $REMOTE_SSH_PORT $REMOTE_USER@$REMOTE_HOST << EOF
            cd CG-sc23-Backend/domo
            git pull -X theirs
            poetry install --no-root
            poetry run python manage.py migrate
            poetry run python manage.py collectstatic --noinput
          
            killall uwsgi
            sudo ps auxww | grep celery | awk '{print $2}' | xargs kill -9
            sudo service rabbitmq-server restart
            
            poetry run celery -A domo_base worker -D -B -l INFO
            poetry run uwsgi --ini uwsgi.ini --enable-threads >> ./serv.log 2>&1 &
            EOF

      - name: Update GitHub Deployment Status
        if: always()
        uses: bobheadxi/deployments@v1.4.0
        with:
          step: finish
          token: ${{ github.token }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env: production
